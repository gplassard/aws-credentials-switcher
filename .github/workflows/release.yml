name: Rust

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Generate a changelog for current release
      uses: orhun/git-cliff-action@v1
      id: git-cliff
      with:
        config: cliff.toml
        args: -vv --latest --strip header
      env:
        OUTPUT: CHANGES.md
    - name: Set the release body
      id: release
      shell: bash
      run: |
        r=$(cat ${{ steps.git-cliff.outputs.changelog }})
        r="${r//'%'/'%25'}"     # Multiline escape sequences for %
        r="${r//$'\n'/'%0A'}"   # Multiline escape sequences for '\n'
        r="${r//$'\r'/'%0D'}"   # Multiline escape sequences for '\r'
        echo "::set-output name=RELEASE_BODY::$r"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.release.outputs.RELEASE_BODY }}
        draft: false
        prerelease: false   
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: target/release/aws-credentials-switcher
        asset_name: aws-credentials-switcher
        asset_content_type: application/zip
    - name: Generate full changelog
      uses: orhun/git-cliff-action@v1
      with:
        config: cliff.toml
        args: --verbose
      env:
        OUTPUT: CHANGELOG.md
    - name: Commit changelog file
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Update changelog
        file_pattern: CHANGELOG.md
